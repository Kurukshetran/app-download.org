<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 0.9.4
// Source: logs.proto
//   Date: 2014-07-20 12:33:10

namespace  {

  class AndroidCheckinProto extends \DrSlump\Protobuf\Message {

    /**  @var \AndroidBuildProto */
    public $build = null;
    
    /**  @var int */
    public $lastCheckinMsec = null;
    
    /**  @var \AndroidEventProto[]  */
    public $event = array();
    
    /**  @var \AndroidStatisticProto[]  */
    public $stat = array();
    
    /**  @var string[]  */
    public $requestedGroup = array();
    
    /**  @var string */
    public $cellOperator = null;
    
    /**  @var string */
    public $simOperator = null;
    
    /**  @var string */
    public $roaming = null;
    
    /**  @var int */
    public $userNumber = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, '.AndroidCheckinProto');

      // OPTIONAL MESSAGE build = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "build";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\AndroidBuildProto';
      $descriptor->addField($f);

      // OPTIONAL INT64 lastCheckinMsec = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "lastCheckinMsec";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE event = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "event";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\AndroidEventProto';
      $descriptor->addField($f);

      // REPEATED MESSAGE stat = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "stat";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\AndroidStatisticProto';
      $descriptor->addField($f);

      // REPEATED STRING requestedGroup = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "requestedGroup";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL STRING cellOperator = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "cellOperator";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING simOperator = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "simOperator";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING roaming = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "roaming";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 userNumber = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "userNumber";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <build> has a value
     *
     * @return boolean
     */
    public function hasBuild(){
      return $this->_has(1);
    }
    
    /**
     * Clear <build> value
     *
     * @return \AndroidCheckinProto
     */
    public function clearBuild(){
      return $this->_clear(1);
    }
    
    /**
     * Get <build> value
     *
     * @return \AndroidBuildProto
     */
    public function getBuild(){
      return $this->_get(1);
    }
    
    /**
     * Set <build> value
     *
     * @param \AndroidBuildProto $value
     * @return \AndroidCheckinProto
     */
    public function setBuild(\AndroidBuildProto $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <lastCheckinMsec> has a value
     *
     * @return boolean
     */
    public function hasLastCheckinMsec(){
      return $this->_has(2);
    }
    
    /**
     * Clear <lastCheckinMsec> value
     *
     * @return \AndroidCheckinProto
     */
    public function clearLastCheckinMsec(){
      return $this->_clear(2);
    }
    
    /**
     * Get <lastCheckinMsec> value
     *
     * @return int
     */
    public function getLastCheckinMsec(){
      return $this->_get(2);
    }
    
    /**
     * Set <lastCheckinMsec> value
     *
     * @param int $value
     * @return \AndroidCheckinProto
     */
    public function setLastCheckinMsec( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <event> has a value
     *
     * @return boolean
     */
    public function hasEvent(){
      return $this->_has(3);
    }
    
    /**
     * Clear <event> value
     *
     * @return \AndroidCheckinProto
     */
    public function clearEvent(){
      return $this->_clear(3);
    }
    
    /**
     * Get <event> value
     *
     * @param int $idx
     * @return \AndroidEventProto
     */
    public function getEvent($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <event> value
     *
     * @param \AndroidEventProto $value
     * @return \AndroidCheckinProto
     */
    public function setEvent(\AndroidEventProto $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <event>
     *
     * @return \AndroidEventProto[]
     */
    public function getEventList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <event>
     *
     * @param \AndroidEventProto $value
     * @return \AndroidCheckinProto
     */
    public function addEvent(\AndroidEventProto $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <stat> has a value
     *
     * @return boolean
     */
    public function hasStat(){
      return $this->_has(4);
    }
    
    /**
     * Clear <stat> value
     *
     * @return \AndroidCheckinProto
     */
    public function clearStat(){
      return $this->_clear(4);
    }
    
    /**
     * Get <stat> value
     *
     * @param int $idx
     * @return \AndroidStatisticProto
     */
    public function getStat($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <stat> value
     *
     * @param \AndroidStatisticProto $value
     * @return \AndroidCheckinProto
     */
    public function setStat(\AndroidStatisticProto $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <stat>
     *
     * @return \AndroidStatisticProto[]
     */
    public function getStatList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <stat>
     *
     * @param \AndroidStatisticProto $value
     * @return \AndroidCheckinProto
     */
    public function addStat(\AndroidStatisticProto $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <requestedGroup> has a value
     *
     * @return boolean
     */
    public function hasRequestedGroup(){
      return $this->_has(5);
    }
    
    /**
     * Clear <requestedGroup> value
     *
     * @return \AndroidCheckinProto
     */
    public function clearRequestedGroup(){
      return $this->_clear(5);
    }
    
    /**
     * Get <requestedGroup> value
     *
     * @param int $idx
     * @return string
     */
    public function getRequestedGroup($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <requestedGroup> value
     *
     * @param string $value
     * @return \AndroidCheckinProto
     */
    public function setRequestedGroup( $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <requestedGroup>
     *
     * @return string[]
     */
    public function getRequestedGroupList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <requestedGroup>
     *
     * @param string $value
     * @return \AndroidCheckinProto
     */
    public function addRequestedGroup( $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <cellOperator> has a value
     *
     * @return boolean
     */
    public function hasCellOperator(){
      return $this->_has(6);
    }
    
    /**
     * Clear <cellOperator> value
     *
     * @return \AndroidCheckinProto
     */
    public function clearCellOperator(){
      return $this->_clear(6);
    }
    
    /**
     * Get <cellOperator> value
     *
     * @return string
     */
    public function getCellOperator(){
      return $this->_get(6);
    }
    
    /**
     * Set <cellOperator> value
     *
     * @param string $value
     * @return \AndroidCheckinProto
     */
    public function setCellOperator( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <simOperator> has a value
     *
     * @return boolean
     */
    public function hasSimOperator(){
      return $this->_has(7);
    }
    
    /**
     * Clear <simOperator> value
     *
     * @return \AndroidCheckinProto
     */
    public function clearSimOperator(){
      return $this->_clear(7);
    }
    
    /**
     * Get <simOperator> value
     *
     * @return string
     */
    public function getSimOperator(){
      return $this->_get(7);
    }
    
    /**
     * Set <simOperator> value
     *
     * @param string $value
     * @return \AndroidCheckinProto
     */
    public function setSimOperator( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <roaming> has a value
     *
     * @return boolean
     */
    public function hasRoaming(){
      return $this->_has(8);
    }
    
    /**
     * Clear <roaming> value
     *
     * @return \AndroidCheckinProto
     */
    public function clearRoaming(){
      return $this->_clear(8);
    }
    
    /**
     * Get <roaming> value
     *
     * @return string
     */
    public function getRoaming(){
      return $this->_get(8);
    }
    
    /**
     * Set <roaming> value
     *
     * @param string $value
     * @return \AndroidCheckinProto
     */
    public function setRoaming( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <userNumber> has a value
     *
     * @return boolean
     */
    public function hasUserNumber(){
      return $this->_has(9);
    }
    
    /**
     * Clear <userNumber> value
     *
     * @return \AndroidCheckinProto
     */
    public function clearUserNumber(){
      return $this->_clear(9);
    }
    
    /**
     * Get <userNumber> value
     *
     * @return int
     */
    public function getUserNumber(){
      return $this->_get(9);
    }
    
    /**
     * Set <userNumber> value
     *
     * @param int $value
     * @return \AndroidCheckinProto
     */
    public function setUserNumber( $value){
      return $this->_set(9, $value);
    }
  }
}

namespace  {

  class AndroidBuildProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $id = null;
    
    /**  @var string */
    public $product = null;
    
    /**  @var string */
    public $carrier = null;
    
    /**  @var string */
    public $radio = null;
    
    /**  @var string */
    public $bootloader = null;
    
    /**  @var string */
    public $client = null;
    
    /**  @var int */
    public $timestamp = null;
    
    /**  @var int */
    public $googleServices = null;
    
    /**  @var string */
    public $device = null;
    
    /**  @var int */
    public $sdkVersion = null;
    
    /**  @var string */
    public $model = null;
    
    /**  @var string */
    public $manufacturer = null;
    
    /**  @var string */
    public $buildProduct = null;
    
    /**  @var boolean */
    public $otaInstalled = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, '.AndroidBuildProto');

      // OPTIONAL STRING id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING product = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "product";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING carrier = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "carrier";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING radio = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "radio";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING bootloader = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "bootloader";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING client = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "client";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 timestamp = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "timestamp";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 googleServices = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "googleServices";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING device = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "device";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 sdkVersion = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "sdkVersion";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING model = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "model";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING manufacturer = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "manufacturer";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING buildProduct = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "buildProduct";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL otaInstalled = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "otaInstalled";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \AndroidBuildProto
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \AndroidBuildProto
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <product> has a value
     *
     * @return boolean
     */
    public function hasProduct(){
      return $this->_has(2);
    }
    
    /**
     * Clear <product> value
     *
     * @return \AndroidBuildProto
     */
    public function clearProduct(){
      return $this->_clear(2);
    }
    
    /**
     * Get <product> value
     *
     * @return string
     */
    public function getProduct(){
      return $this->_get(2);
    }
    
    /**
     * Set <product> value
     *
     * @param string $value
     * @return \AndroidBuildProto
     */
    public function setProduct( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <carrier> has a value
     *
     * @return boolean
     */
    public function hasCarrier(){
      return $this->_has(3);
    }
    
    /**
     * Clear <carrier> value
     *
     * @return \AndroidBuildProto
     */
    public function clearCarrier(){
      return $this->_clear(3);
    }
    
    /**
     * Get <carrier> value
     *
     * @return string
     */
    public function getCarrier(){
      return $this->_get(3);
    }
    
    /**
     * Set <carrier> value
     *
     * @param string $value
     * @return \AndroidBuildProto
     */
    public function setCarrier( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <radio> has a value
     *
     * @return boolean
     */
    public function hasRadio(){
      return $this->_has(4);
    }
    
    /**
     * Clear <radio> value
     *
     * @return \AndroidBuildProto
     */
    public function clearRadio(){
      return $this->_clear(4);
    }
    
    /**
     * Get <radio> value
     *
     * @return string
     */
    public function getRadio(){
      return $this->_get(4);
    }
    
    /**
     * Set <radio> value
     *
     * @param string $value
     * @return \AndroidBuildProto
     */
    public function setRadio( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <bootloader> has a value
     *
     * @return boolean
     */
    public function hasBootloader(){
      return $this->_has(5);
    }
    
    /**
     * Clear <bootloader> value
     *
     * @return \AndroidBuildProto
     */
    public function clearBootloader(){
      return $this->_clear(5);
    }
    
    /**
     * Get <bootloader> value
     *
     * @return string
     */
    public function getBootloader(){
      return $this->_get(5);
    }
    
    /**
     * Set <bootloader> value
     *
     * @param string $value
     * @return \AndroidBuildProto
     */
    public function setBootloader( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <client> has a value
     *
     * @return boolean
     */
    public function hasClient(){
      return $this->_has(6);
    }
    
    /**
     * Clear <client> value
     *
     * @return \AndroidBuildProto
     */
    public function clearClient(){
      return $this->_clear(6);
    }
    
    /**
     * Get <client> value
     *
     * @return string
     */
    public function getClient(){
      return $this->_get(6);
    }
    
    /**
     * Set <client> value
     *
     * @param string $value
     * @return \AndroidBuildProto
     */
    public function setClient( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <timestamp> has a value
     *
     * @return boolean
     */
    public function hasTimestamp(){
      return $this->_has(7);
    }
    
    /**
     * Clear <timestamp> value
     *
     * @return \AndroidBuildProto
     */
    public function clearTimestamp(){
      return $this->_clear(7);
    }
    
    /**
     * Get <timestamp> value
     *
     * @return int
     */
    public function getTimestamp(){
      return $this->_get(7);
    }
    
    /**
     * Set <timestamp> value
     *
     * @param int $value
     * @return \AndroidBuildProto
     */
    public function setTimestamp( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <googleServices> has a value
     *
     * @return boolean
     */
    public function hasGoogleServices(){
      return $this->_has(8);
    }
    
    /**
     * Clear <googleServices> value
     *
     * @return \AndroidBuildProto
     */
    public function clearGoogleServices(){
      return $this->_clear(8);
    }
    
    /**
     * Get <googleServices> value
     *
     * @return int
     */
    public function getGoogleServices(){
      return $this->_get(8);
    }
    
    /**
     * Set <googleServices> value
     *
     * @param int $value
     * @return \AndroidBuildProto
     */
    public function setGoogleServices( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <device> has a value
     *
     * @return boolean
     */
    public function hasDevice(){
      return $this->_has(9);
    }
    
    /**
     * Clear <device> value
     *
     * @return \AndroidBuildProto
     */
    public function clearDevice(){
      return $this->_clear(9);
    }
    
    /**
     * Get <device> value
     *
     * @return string
     */
    public function getDevice(){
      return $this->_get(9);
    }
    
    /**
     * Set <device> value
     *
     * @param string $value
     * @return \AndroidBuildProto
     */
    public function setDevice( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <sdkVersion> has a value
     *
     * @return boolean
     */
    public function hasSdkVersion(){
      return $this->_has(10);
    }
    
    /**
     * Clear <sdkVersion> value
     *
     * @return \AndroidBuildProto
     */
    public function clearSdkVersion(){
      return $this->_clear(10);
    }
    
    /**
     * Get <sdkVersion> value
     *
     * @return int
     */
    public function getSdkVersion(){
      return $this->_get(10);
    }
    
    /**
     * Set <sdkVersion> value
     *
     * @param int $value
     * @return \AndroidBuildProto
     */
    public function setSdkVersion( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <model> has a value
     *
     * @return boolean
     */
    public function hasModel(){
      return $this->_has(11);
    }
    
    /**
     * Clear <model> value
     *
     * @return \AndroidBuildProto
     */
    public function clearModel(){
      return $this->_clear(11);
    }
    
    /**
     * Get <model> value
     *
     * @return string
     */
    public function getModel(){
      return $this->_get(11);
    }
    
    /**
     * Set <model> value
     *
     * @param string $value
     * @return \AndroidBuildProto
     */
    public function setModel( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <manufacturer> has a value
     *
     * @return boolean
     */
    public function hasManufacturer(){
      return $this->_has(12);
    }
    
    /**
     * Clear <manufacturer> value
     *
     * @return \AndroidBuildProto
     */
    public function clearManufacturer(){
      return $this->_clear(12);
    }
    
    /**
     * Get <manufacturer> value
     *
     * @return string
     */
    public function getManufacturer(){
      return $this->_get(12);
    }
    
    /**
     * Set <manufacturer> value
     *
     * @param string $value
     * @return \AndroidBuildProto
     */
    public function setManufacturer( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <buildProduct> has a value
     *
     * @return boolean
     */
    public function hasBuildProduct(){
      return $this->_has(13);
    }
    
    /**
     * Clear <buildProduct> value
     *
     * @return \AndroidBuildProto
     */
    public function clearBuildProduct(){
      return $this->_clear(13);
    }
    
    /**
     * Get <buildProduct> value
     *
     * @return string
     */
    public function getBuildProduct(){
      return $this->_get(13);
    }
    
    /**
     * Set <buildProduct> value
     *
     * @param string $value
     * @return \AndroidBuildProto
     */
    public function setBuildProduct( $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <otaInstalled> has a value
     *
     * @return boolean
     */
    public function hasOtaInstalled(){
      return $this->_has(14);
    }
    
    /**
     * Clear <otaInstalled> value
     *
     * @return \AndroidBuildProto
     */
    public function clearOtaInstalled(){
      return $this->_clear(14);
    }
    
    /**
     * Get <otaInstalled> value
     *
     * @return boolean
     */
    public function getOtaInstalled(){
      return $this->_get(14);
    }
    
    /**
     * Set <otaInstalled> value
     *
     * @param boolean $value
     * @return \AndroidBuildProto
     */
    public function setOtaInstalled( $value){
      return $this->_set(14, $value);
    }
  }
}

namespace  {

  class AndroidEventProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $tag = null;
    
    /**  @var string */
    public $value = null;
    
    /**  @var int */
    public $timeMsec = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, '.AndroidEventProto');

      // OPTIONAL STRING tag = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "tag";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 timeMsec = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "timeMsec";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <tag> has a value
     *
     * @return boolean
     */
    public function hasTag(){
      return $this->_has(1);
    }
    
    /**
     * Clear <tag> value
     *
     * @return \AndroidEventProto
     */
    public function clearTag(){
      return $this->_clear(1);
    }
    
    /**
     * Get <tag> value
     *
     * @return string
     */
    public function getTag(){
      return $this->_get(1);
    }
    
    /**
     * Set <tag> value
     *
     * @param string $value
     * @return \AndroidEventProto
     */
    public function setTag( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \AndroidEventProto
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \AndroidEventProto
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <timeMsec> has a value
     *
     * @return boolean
     */
    public function hasTimeMsec(){
      return $this->_has(3);
    }
    
    /**
     * Clear <timeMsec> value
     *
     * @return \AndroidEventProto
     */
    public function clearTimeMsec(){
      return $this->_clear(3);
    }
    
    /**
     * Get <timeMsec> value
     *
     * @return int
     */
    public function getTimeMsec(){
      return $this->_get(3);
    }
    
    /**
     * Set <timeMsec> value
     *
     * @param int $value
     * @return \AndroidEventProto
     */
    public function setTimeMsec( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace  {

  class AndroidStatisticProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $tag = null;
    
    /**  @var int */
    public $count = null;
    
    /**  @var float */
    public $sum = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, '.AndroidStatisticProto');

      // OPTIONAL STRING tag = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "tag";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 count = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "count";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL FLOAT sum = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "sum";
      $f->type      = \DrSlump\Protobuf::TYPE_FLOAT;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <tag> has a value
     *
     * @return boolean
     */
    public function hasTag(){
      return $this->_has(1);
    }
    
    /**
     * Clear <tag> value
     *
     * @return \AndroidStatisticProto
     */
    public function clearTag(){
      return $this->_clear(1);
    }
    
    /**
     * Get <tag> value
     *
     * @return string
     */
    public function getTag(){
      return $this->_get(1);
    }
    
    /**
     * Set <tag> value
     *
     * @param string $value
     * @return \AndroidStatisticProto
     */
    public function setTag( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <count> has a value
     *
     * @return boolean
     */
    public function hasCount(){
      return $this->_has(2);
    }
    
    /**
     * Clear <count> value
     *
     * @return \AndroidStatisticProto
     */
    public function clearCount(){
      return $this->_clear(2);
    }
    
    /**
     * Get <count> value
     *
     * @return int
     */
    public function getCount(){
      return $this->_get(2);
    }
    
    /**
     * Set <count> value
     *
     * @param int $value
     * @return \AndroidStatisticProto
     */
    public function setCount( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <sum> has a value
     *
     * @return boolean
     */
    public function hasSum(){
      return $this->_has(3);
    }
    
    /**
     * Clear <sum> value
     *
     * @return \AndroidStatisticProto
     */
    public function clearSum(){
      return $this->_clear(3);
    }
    
    /**
     * Get <sum> value
     *
     * @return float
     */
    public function getSum(){
      return $this->_get(3);
    }
    
    /**
     * Set <sum> value
     *
     * @param float $value
     * @return \AndroidStatisticProto
     */
    public function setSum( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace AndroidIntentProto {

  class Extra extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, '.AndroidIntentProto.Extra');

      // OPTIONAL STRING name = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(6);
    }
    
    /**
     * Clear <name> value
     *
     * @return \AndroidIntentProto\Extra
     */
    public function clearName(){
      return $this->_clear(6);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(6);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \AndroidIntentProto\Extra
     */
    public function setName( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(7);
    }
    
    /**
     * Clear <value> value
     *
     * @return \AndroidIntentProto\Extra
     */
    public function clearValue(){
      return $this->_clear(7);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(7);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \AndroidIntentProto\Extra
     */
    public function setValue( $value){
      return $this->_set(7, $value);
    }
  }
}

namespace  {

  class AndroidIntentProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $action = null;
    
    /**  @var string */
    public $dataUri = null;
    
    /**  @var string */
    public $mimeType = null;
    
    /**  @var string */
    public $javaClass = null;
    
    /**  @var unknown[]  */
    public $extra = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, '.AndroidIntentProto');

      // OPTIONAL STRING action = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "action";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING dataUri = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "dataUri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING mimeType = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "mimeType";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING javaClass = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "javaClass";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED GROUP extra = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "extra";
      $f->type      = \DrSlump\Protobuf::TYPE_GROUP;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\AndroidIntentProto\Extra';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <action> has a value
     *
     * @return boolean
     */
    public function hasAction(){
      return $this->_has(1);
    }
    
    /**
     * Clear <action> value
     *
     * @return \AndroidIntentProto
     */
    public function clearAction(){
      return $this->_clear(1);
    }
    
    /**
     * Get <action> value
     *
     * @return string
     */
    public function getAction(){
      return $this->_get(1);
    }
    
    /**
     * Set <action> value
     *
     * @param string $value
     * @return \AndroidIntentProto
     */
    public function setAction( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <dataUri> has a value
     *
     * @return boolean
     */
    public function hasDataUri(){
      return $this->_has(2);
    }
    
    /**
     * Clear <dataUri> value
     *
     * @return \AndroidIntentProto
     */
    public function clearDataUri(){
      return $this->_clear(2);
    }
    
    /**
     * Get <dataUri> value
     *
     * @return string
     */
    public function getDataUri(){
      return $this->_get(2);
    }
    
    /**
     * Set <dataUri> value
     *
     * @param string $value
     * @return \AndroidIntentProto
     */
    public function setDataUri( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <mimeType> has a value
     *
     * @return boolean
     */
    public function hasMimeType(){
      return $this->_has(3);
    }
    
    /**
     * Clear <mimeType> value
     *
     * @return \AndroidIntentProto
     */
    public function clearMimeType(){
      return $this->_clear(3);
    }
    
    /**
     * Get <mimeType> value
     *
     * @return string
     */
    public function getMimeType(){
      return $this->_get(3);
    }
    
    /**
     * Set <mimeType> value
     *
     * @param string $value
     * @return \AndroidIntentProto
     */
    public function setMimeType( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <javaClass> has a value
     *
     * @return boolean
     */
    public function hasJavaClass(){
      return $this->_has(4);
    }
    
    /**
     * Clear <javaClass> value
     *
     * @return \AndroidIntentProto
     */
    public function clearJavaClass(){
      return $this->_clear(4);
    }
    
    /**
     * Get <javaClass> value
     *
     * @return string
     */
    public function getJavaClass(){
      return $this->_get(4);
    }
    
    /**
     * Set <javaClass> value
     *
     * @param string $value
     * @return \AndroidIntentProto
     */
    public function setJavaClass( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <extra> has a value
     *
     * @return boolean
     */
    public function hasExtra(){
      return $this->_has(5);
    }
    
    /**
     * Clear <extra> value
     *
     * @return \AndroidIntentProto
     */
    public function clearExtra(){
      return $this->_clear(5);
    }
    
    /**
     * Get <extra> value
     *
     * @param int $idx
     * @return unknown
     */
    public function getExtra($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <extra> value
     *
     * @param unknown $value
     * @return \AndroidIntentProto
     */
    public function setExtra( $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <extra>
     *
     * @return unknown[]
     */
    public function getExtraList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <extra>
     *
     * @param unknown $value
     * @return \AndroidIntentProto
     */
    public function addExtra( $value){
     return $this->_add(5, $value);
    }
  }
}

